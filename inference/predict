#!/usr/bin/env python3

#from google.protobuf import text_format
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import os
import csv

#https://www.tensorflow.org/tutorials/keras/save_and_restore_models

prefix = 'opt/ml/model/1552280906'

def load_graph(model_file):
  graph = tf.Graph()
  graph_def = tf.GraphDef()

  with open(model_file, "rb") as f:
    #text_format.Merge(f.read(), graph_def)
    graph_def.ParseFromString(f.read())
  with graph.as_default():
    tf.import_graph_def(graph_def)
  return graph

def load_sess(model_file):
  with tf.Session(graph=tf.Graph()) as sess:
      tf.saved_model.loader.load(sess, ["serve"], prefix) #model_file)
      graph_def = tf.GraphDef()
      graph = tf.get_default_graph()
      #print(graph.get_operations())
      return graph

def load_labels(label_file):
    label = []
    proto_as_ascii_lines = tf.gfile.GFile(label_file).readlines()
    for l in proto_as_ascii_lines:
        label.append(l.rstrip())
    return label

if __name__ == "__main__":
    model = load_sess('graph.pb')
    #model = tf.keras.models.load_model('saved_model.pb')
    #model = load_graph(os.path.join(prefix, 'saved_model.pb'))
    lables = load_labels(os.path.join(prefix, 'labels.csv'))
    '''
    with open(os.path.join(prefix, 'labels.csv')) as csvfile:
        readCSV = csv.reader(csvfile, delimiter=',')
        labels = []
        for row in readCSV:
            labels = labels + row
    '''
    print(lables)

    image = image.load_img('rose.jpg', target_size=(224,224))
    prediction = model.predict(image)


    '''
    result_batch = model.predict(image_batch)

    labels_batch = label_names[np.argmax(result_batch, axis=-1)]
    labels_batch
    '''
